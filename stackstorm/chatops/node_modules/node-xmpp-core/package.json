{
  "name": "node-xmpp-core",
  "version": "4.2.0",
  "description": "core files for the node-xmpp project",
  "main": "index.js",
  "scripts": {
    "preversion": "npm test",
    "unit": "mocha --recursive test/",
    "lint": "standard",
    "coverage": "istanbul cover _mocha --report lcovonly -- -R spec",
    "coveralls": "cat ./coverage/lcov.info | coveralls && rm -rf ./coverage",
    "test": "npm run unit && npm run lint && npm run coverage"
  },
  "homepage": "https://github.com/node-xmpp/node-xmpp-core",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/node-xmpp/node-xmpp-core.git"
  },
  "bugs": {
    "url": "https://github.com/node-xmpp/node-xmpp-core/issues"
  },
  "keywords": [
    "XMPP",
    "JID",
    "SRV",
    "Stanza",
    "iq",
    "message",
    "presence"
  ],
  "author": {
    "name": "Lloyd Watkin",
    "email": "lloyd@evilprofessor.co.uk"
  },
  "license": "MIT",
  "dependencies": {
    "debug": "^2.2.0",
    "inherits": "^2.0.1",
    "lodash.assign": "^3.2.0",
    "ltx": "^2.0.1",
    "node-xmpp-jid": "^2.0.0",
    "reconnect-core": "https://github.com/dodo/reconnect-core/tarball/merged",
    "tls-connect": "^0.2.2"
  },
  "devDependencies": {
    "coveralls": "^2.11.4",
    "istanbul": "^0.4.0",
    "sinon": "^1.17.1"
  },
  "readme": "# node-xmpp-core\n\nLibrary to handle all the core functionality for:\n\n* [node-xmpp-client](https://github.com/node-xmpp/node-xmpp-client)\n* [node-xmpp-component](https://github.com/node-xmpp/node-xmpp-component)\n* [node-xmpp-server](https://github.com/node-xmpp/node-xmpp-server)\n\n[![build status](https://img.shields.io/travis/node-xmpp/node-xmpp-core/master.svg?style=flat-square)](http://travis-ci.org/node-xmpp/node-xmpp-core)\n[![Coverage Status](https://img.shields.io/coveralls/node-xmpp/node-xmpp-core.svg?style=flat-square)](https://coveralls.io/r/node-xmpp/node-xmpp-core)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](http://standardjs.com/)\n\n## Installation\n\n__Note:__ We now only support Node.js versions 0.8.0 and greater.\n\nWith package manager [npm](http://npmjs.org/):\n\n    npm install node-xmpp-core\n\n### Testing\n\nInstall the dev dependencies, then...\n\n```npm test```\n\nAlso see the tests run in [travis](http://travis-ci.org/node-xmpp/node-xmpp-core). The tests in travis run both the code and code style tests.\n\n## How to use\n\nPlease use one of `node-xmpp-client/component/server`\n\n## Objectives of *node-xmpp-core:*\n\n* Use node.js conventions, especially `EventEmitter`, ie. for write\n  buffer control\n* Fast parsing, `node-expat` was written for this library\n\n## Configurations\n\n### serialized\nSet this option as `true` to enable the optimization for continuous TCP streams. If your \"socket\" actually transports frames (WebSockets) and you can't have stanzas split across those, do not enable it.\n\n**type:** boolean\n**default:** `false`\n\n\n## Features\n\n* Simple JID parsing with Stringprep normalization\n  * Optional now, you won't need ICU for just node-xmpp\n  * Please be aware if you identify users by JIDs\n  * `npm install node-stringprep`\n* Uses [ltx](http://github.com/astro/ltx)\n  * Much easier to handle than a standard DOM\n  * xmlns-aware\n  * Easy XML builder like Strophe.js (see down)\n  * Non-buffering serialization\n  * Was split out of node-xmpp for modularization and resuability\n\n## Dependencies\n\n* [ltx](http://github.com/node-xmpp/ltx)\n\nOptional\n\n* [node-stringprep](http://github.com/node-xmpp/node-stringprep): for [icu](http://icu-project.org/)-based string normalization.\n\nAutomatically building the optional library can be turned off by `npm config set optional false` or by setting the environmental variable `export NPM_CONFIG_OPTIONAL=false`. On Heroku this is done through `heroku config:set NPM_CONFIG_OPTIONAL=false`, for example.\n\n### Building XML Elements\n\nStrophe.js' XML Builder is very convenient for producing XMPP\nstanzas. ltx includes it in a much more primitive way: the\n`c()`, `cnode()` and `t()` methods can be called on any *Element*\nobject, returning the new child element.\n\nThis can be confusing: in the end, you will hold the last-added child\nuntil you use `up()`, a getter for the parent. `Connection.send()`\nfirst invokes `tree()` to retrieve the uppermost parent, the XMPP\nstanza, before sending it out the wire.\n\n# Documentation\n\n(Builing up documentation slowly)\n\n## JID Manipulation\n\n...coming soon...\n",
  "readmeFilename": "README.md",
  "_id": "node-xmpp-core@4.2.0",
  "_shasum": "7e2e040c1e5aa64be35013bdc34132ec376995ae",
  "_resolved": "https://registry.npmjs.org/node-xmpp-core/-/node-xmpp-core-4.2.0.tgz",
  "_from": "https://registry.npmjs.org/node-xmpp-core/-/node-xmpp-core-4.2.0.tgz"
}
